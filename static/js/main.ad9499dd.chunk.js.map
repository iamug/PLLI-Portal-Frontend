{"version":3,"sources":["pages/Login.tsx","controllers/api.js","helpers/index.ts","components/elements/form/index.tsx","pages/Signup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","axios","create","baseURL","className","style","background","Container","src","alt","height","type","id","placeholder","htmlFor","to","capitalizeFirstLetter","str","replace","m","toUpperCase","Input","name","label","disableLabel","disableValidation","props","field","meta","FloatingLabel","Form","Control","isInvalid","value","touched","error","isValid","Select","options","firstItem","selected","disabled","map","item","index","Signup","useState","step","setStep","initialState","schema","yup","shape","fullname","required","min","gender","email","phone","max","currentVocationDescription","optional","OthersCurrentVocationDescription","designation","othersDesignation","essay","academicQualification","livelihood","cacRegistered","when","is","then","otherwise","businessLocation","location","annualTurnover","ownershipStructure","financialRecordingProcess","yearsOperation","staffStrength","businessSector","workExpereience","industry","noPeopleReport","noProfessionalDevelopmentCourses","validationSchema","validateOnChange","validateOnBlur","validateOnMount","initialValues","onSubmit","data","console","log","values","errors","validateForm","handleSubmit","handleChange","noValidate","onChange","e","Group","controlId","Label","as","onClick","neededKeys","some","key","Object","keys","includes","arr","filter","i","length","toast","validateStep0","validateStep1","validateStep2","validateStep3","App","basename","position","autoClose","limit","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad9499dd.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\n\nconst Login: React.FC = () => {\n  return (\n    <div\n      className=\"py-5 min-vh-100 \"\n      style={{\n        background: `linear-gradient( rgba(0,0,0,0.7), rgba(0,0,0, 0.7)) , url(http://lab.plli.org/web/wp-content/uploads/2022/04/leadership-min.jpg) center / cover fixed `,\n      }}\n    >\n      <Container className=\"py-lg-5\">\n        <div className=\"bg-white rounded rounded-3 col-12 col-md-8 offset-md-2 col-xl-6 offset-xl-6 my-auto py-5 px-4 border border-2 shadow-lg\">\n          <form>\n            <div className=\"text-center w-100 mb-4\">\n              <img\n                className=\"mb-4 mx-auto\"\n                src=\"https://lab.plli.org/web/wp-content/uploads/2020/12/logo-light-e1636397894245.png\"\n                alt=\"\"\n                // width={72}\n                height={100}\n              />\n              <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\n              <p className=\"text-muted mb-3 fw-normal\">Enter your email address and password to access your account.</p>\n            </div>\n\n            <div className=\"form-floating my-3\">\n              <input type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\" />\n              <label htmlFor=\"floatingInput\">Email address</label>\n            </div>\n            <div className=\"form-floating my-3\">\n              <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" />\n              <label htmlFor=\"floatingPassword\">Password</label>\n            </div>\n\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n              Sign in\n            </button>\n\n            <div className=\"row mt-3 hidden\">\n              <div className=\"col-12 text-center mt-3\">\n                <p className=\"text-dark\">\n                  Don&apos;t have an account ?{\" \"}\n                  <Link to=\"./signup\" className=\"text-decoration-none h5\">\n                    {\" \"}\n                    Signup{\" \"}\n                  </Link>\n                </p>\n              </div>{\" \"}\n              {/* end col */}\n            </div>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: `https://jsonplaceholder.typicode.com/`,\n});","export const capitalizeFirstLetter = (str: string) =>\n  str.replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());","import React, { ElementType } from \"react\";\nimport { Field } from \"formik\";\nimport { Form, FloatingLabel, InputGroup } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from \"../../../helpers\";\n\ninterface INPUT {\n  name: string;\n  type?: string;\n  label?: string;\n  as?: ElementType;\n  disableValidation?: boolean;\n  disableLabel?: boolean;\n  [key: string]: string | any;\n}\ninterface SELECT {\n  name: string;\n  options: string[] | { label: string; value: string }[];\n  label?: string;\n  as?: ElementType;\n  disableValidation?: boolean;\n  firstItem?: string;\n  [key: string]: string | any;\n}\n\ninterface INPUTADDON extends INPUT {\n  AddonText: string;\n}\n\nexport const Input = ({ name, type, label, disableLabel = true, disableValidation = true, ...props }: INPUT) => {\n  return (\n    <>\n      <Field name={name}>\n        {({ field, meta }: any) => (\n          <>\n            <FloatingLabel label={!disableLabel ? \" \" : label || capitalizeFirstLetter(name)} className=\"mb-2\">\n              <Form.Control\n                type={type || `text`}\n                isInvalid={!disableValidation && (meta.value || meta.touched) && meta.error}\n                isValid={!disableValidation && (meta.value || meta.touched) && !meta.error}\n                {...field}\n                {...props}\n              />\n            </FloatingLabel>\n            {meta.touched && meta.error && <span className=\"text-danger\">{meta.error}</span>}\n          </>\n        )}\n      </Field>\n    </>\n  );\n};\n\n// export const Input = ({ name, type, label, disableLabel = false, disableValidation = true, ...props }: INPUT) => {\n//   return (\n//     <>\n//       <Field name={name}>\n//         {({ field, meta }: any) => (\n//           <>\n//           <FloatingLabel label={label || capitalizeFirstLetter(name)} className=\"mb-2\">\n//               <Form.Control\n//                 type={type || `text`}\n//                 isInvalid={!disableValidation && (meta.value || meta.touched) && meta.error}\n//                 isValid={!disableValidation && (meta.value || meta.touched) && !meta.error}\n//                 {...field}\n//                 {...props}\n//               />\n//             </FloatingLabel>\n//             {meta.touched && meta.error && <span className=\"text-danger\">{meta.error}</span>}\n//           </>\n//         )}\n//       </Field>\n//     </>\n//   );\n// };\n\nexport const Select = ({ name, label, disableValidation = true, options, firstItem, ...props }: SELECT) => {\n  return (\n    <>\n      <Field name={name}>\n        {({ field, meta }: any) => (\n          <>\n            <FloatingLabel label={label || capitalizeFirstLetter(name)} className=\"mb-2\">\n              <Form.Select\n                isInvalid={!disableValidation && (meta.value || meta.touched) && meta.error}\n                isValid={!disableValidation && (meta.value || meta.touched) && !meta.error}\n                {...props}\n                {...field}\n              >\n                <option selected disabled>\n                  {\" \"}\n                  {firstItem ?? `Select ${label || capitalizeFirstLetter(name)}`}\n                </option>\n                {options?.map((item, index: number): any => (\n                  <option key={index} value={typeof item == \"object\" ? item.value : item}>\n                    {typeof item == \"object\" ? item.label : item}\n                  </option>\n                ))}\n              </Form.Select>\n            </FloatingLabel>\n            {meta.touched && meta.error && <span className=\"text-danger\">{meta.error}</span>}\n          </>\n        )}\n      </Field>\n    </>\n  );\n};\n\nexport const InputAddon = ({ name, type, label, disableValidation, optn, opnValues, AddonText, ...props }: INPUTADDON) => {\n  return (\n    <>\n      <Field name={name}>\n        {({ field, meta }: any) => (\n          <>\n            <InputGroup className=\"mb-2\">\n              <FloatingLabel label={label || capitalizeFirstLetter(name)} className=\"\" style={{ flexGrow: 1 }}>\n                {optn ? (\n                  <Form.Select\n                    isInvalid={!disableValidation && (meta.value || meta.touched) && meta.error}\n                    isValid={!disableValidation && (meta.value || meta.touched) && !meta.error}\n                    {...props}\n                    {...field}\n                  >\n                    <option disabled></option>\n                    {opnValues?.map((item: any, index: number): any => (\n                      <option key={index} value={item.id}>\n                        {item.name}\n                      </option>\n                    ))}\n                  </Form.Select>\n                ) : (\n                  <Form.Control\n                    type={type || `text`}\n                    isInvalid={!disableValidation && (meta.value || meta.touched) && meta.error}\n                    isValid={!disableValidation && (meta.value || meta.touched) && !meta.error}\n                    {...field}\n                    {...props}\n                  />\n                )}\n              </FloatingLabel>\n              <InputGroup.Text>{AddonText}</InputGroup.Text>\n            </InputGroup>\n            {meta.touched && meta.error && <span className=\"text-danger\">{meta.error}</span>}\n          </>\n        )}\n      </Field>\n    </>\n  );\n};\n","import { Formik, Field } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Modal, Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport Container from \"react-bootstrap/Container\";\nimport { Input, Select } from \"../components/elements/form\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nconst Signup: React.FC = () => {\n  const initialValues = {};\n\n  const [step, setStep] = useState<number>(0);\n  const [initialState, setIntialState] = useState<any>(initialValues);\n\n  const schema = yup.object().shape({\n    fullname: yup.string().required().min(4).label(\"Fullname\"),\n    gender: yup.string().required().min(4).label(\"Gender\"),\n    email: yup.string().email().required().label(\"Email Address\"),\n    phone: yup.string().required().min(8).max(14).label(\"Phone Number\"),\n    currentVocationDescription: yup.string().optional().label(\"Field\"),\n    OthersCurrentVocationDescription: yup.string().optional().label(\"Field\"),\n    designation: yup.string().optional().label(\"Field\"),\n    othersDesignation: yup.string().optional().label(\"Field\"),\n    essay: yup.string().optional().label(\"Field\"),\n    academicQualification: yup.string().required().label(\"Field\"),\n    livelihood: yup.string().required().label(\"Field\"),\n    //busines owners\n    cacRegistered: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    businessLocation: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    location: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    annualTurnover: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    ownershipStructure: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    financialRecordingProcess: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    yearsOperation: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    staffStrength: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    businessSector: yup.string().when(\"livelihood\", {\n      is: \"Business Owner\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    //corporate professionals\n    workExpereience: yup.string().when(\"livelihood\", {\n      is: \"Paid Employment (9-5)\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    industry: yup.string().when(\"livelihood\", {\n      is: \"Paid Employment (9-5)\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    noPeopleReport: yup.string().when(\"livelihood\", {\n      is: \"Paid Employment (9-5)\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n    noProfessionalDevelopmentCourses: yup.string().when(\"livelihood\", {\n      is: \"Paid Employment (9-5)\",\n      then: yup.string().required(\"Field\"),\n      otherwise: yup.string().optional(),\n    }),\n  });\n\n  const validateStep0 = (errors: any) => {\n    const neededKeys = [\"fullname\", \"gender\", \"email\", \"phone\"];\n    if (neededKeys.some((key) => Object.keys(errors).includes(key))) {\n      const arr = neededKeys.filter((i) => errors[i]);\n      if (arr.length > 0) return toast.error(`Error. ${errors[arr[0]]}`);\n    }\n    setStep(1);\n  };\n\n  const validateStep1 = (errors: any) => {\n    const neededKeys = [\n      \"currentVocationDescription\",\n      \"OthersCurrentVocationDescription\",\n      \"designation\",\n      \"othersDesignation\",\n      \"academicQualification\",\n    ];\n    if (neededKeys.some((key) => Object.keys(errors).includes(key))) {\n      const arr = neededKeys.filter((i) => errors[i]);\n      if (arr.length > 0) return toast.error(`Error. ${errors[arr[0]]}`);\n    }\n    setStep(2);\n  };\n\n  const validateStep2 = (errors: any) => {\n    const neededKeys = [\"essay\", \"livelihood\"];\n    if (neededKeys.some((key) => Object.keys(errors).includes(key))) {\n      const arr = neededKeys.filter((i) => errors[i]);\n      if (arr.length > 0) return toast.error(`Error. ${errors[arr[0]]}`);\n    }\n    setStep(3);\n  };\n\n  const validateStep3 = (errors: any) => {\n    const neededKeys = [\n      \"cacRegistered\",\n      \"businessLocation\",\n      \"location\",\n      \"annualTurnover\",\n      \"ownershipStructure\",\n      \"financialRecordingProcess\",\n      \"yearsOperation\",\n      \"staffStrength\",\n      \"businessSector\",\n      \"workExpereience\",\n      \"industry\",\n      \"noPeopleReport\",\n      \"noProfessionalDevelopmentCourses\",\n      \"professionalCourses\",\n    ];\n    if (neededKeys.some((key) => Object.keys(errors).includes(key))) {\n      const arr = neededKeys.filter((i) => errors[i]);\n      if (arr.length > 0) return toast.error(`Error. ${errors[arr[0]]}`);\n    }\n    // setStep(4);\n  };\n\n  return (\n    <div\n      className=\"py-5 min-vh-100 \"\n      style={{\n        background: `linear-gradient( rgba(0,0,0,0.7), rgba(0,0,0, 0.7)) , url(http://lab.plli.org/web/wp-content/uploads/2022/04/leadership-min.jpg) center / cover fixed `,\n      }}\n      //   style={{ background: `url('https://spruko.com/demo/sash/sash/assets/images/media/bg2.jpg') center center / cover` }}\n    >\n      <Container className=\"py-lg-1\">\n        <div className=\"bg-white rounded rounded-3 col-12 col-md-8 offset-md-2 col-xl-6 offset-xl-6 my-auto py-5 px-4 border border-2 shadow-lg\">\n          <div className=\"text-center w-100 mb-4  border-bottom \">\n            <img\n              className=\"mb-4 mx-auto\"\n              src=\"https://lab.plli.org/web/wp-content/uploads/2020/12/logo-light-e1636397894245.png\"\n              alt=\"\"\n              // width={72}\n              height={100}\n            />\n            <h1 className=\"h3 mb-3 fw-normal\">Sign Up Here</h1>\n          </div>\n\n          <Formik\n            validationSchema={schema}\n            validateOnChange={true}\n            validateOnBlur={true}\n            validateOnMount={true}\n            initialValues={initialState}\n            onSubmit={(data) => {\n              console.log({ data });\n              // !dataUpdate && createPage(data);\n            }}\n          >\n            {({ values, errors, validateForm, handleChange, isValid, handleSubmit }) => (\n              <>\n                <form noValidate onChange={(e) => validateForm()} onSubmit={handleSubmit}>\n                  <div className=\"\">\n                    <div className=\"row align-items-stretch pt-4 mt-0 pb-2 gy-5 gx-2\">\n                      {step == 0 && (\n                        <>\n                          <div className=\"col-lg-6 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Input name=\"fullname\" placeholder=\"Enter full name\" />\n                            </Form.Group>\n                          </div>\n                          <div className=\"col-lg-6 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Select\n                                name=\"gender\"\n                                label=\"Gender\"\n                                options={[\n                                  { label: \"Male\", value: \"male\" },\n                                  { label: \"Feale\", value: \"female\" },\n                                ]}\n                              />\n                            </Form.Group>\n                          </div>\n                          <div className=\"col-lg-6 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Input name=\"email\" label=\"Email Address\" placeholder=\"Enter email\" />\n                            </Form.Group>\n                          </div>\n                          <div className=\"col-lg-6 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Input name=\"phone\" label=\"Phone Number\" placeholder=\"Enter phone number\" />\n                            </Form.Group>\n                          </div>\n                        </>\n                      )}\n                      {step == 1 && (\n                        <>\n                          <div className=\"col-lg-12 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Select\n                                name=\"currentVocationDescription\"\n                                label=\"What best describes your current vocation \"\n                                firstItem=\"Select Option\"\n                                options={[\n                                  \"Business Owner\",\n                                  \"Techpreneur / Tech Founder\",\n                                  \"Senior Corporate Executive\",\n                                  \"9 - 5 with side hustle\",\n                                  \"Freelance / Self Employed\",\n                                  \"Planning on transiting paid employment to entrepreneurship\",\n                                  \"Civil Servant\",\n                                  \"Clergy\",\n                                  \"Student\",\n                                  \"Unemployed\",\n                                  \"Others\",\n                                ]}\n                              />\n                            </Form.Group>\n                          </div>\n                          {values.currentVocationDescription == \"Others\" && (\n                            <div className=\"col-lg-12 mt-2\">\n                              <Form.Group className=\"mb-3\">\n                                <Input name=\"OthersCurrentVocationDescription\" label=\"Others\" placeholder=\"Kindly specify\" />\n                              </Form.Group>\n                            </div>\n                          )}\n                          <div className=\"col-lg-12 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Select\n                                name=\"designation\"\n                                label=\"Designation / Position \"\n                                firstItem=\"Select Option\"\n                                options={[\n                                  \"CEO\",\n                                  \"COO\",\n                                  \"CFO\",\n                                  \"CTO\",\n                                  \"CMO\",\n                                  \"GMD\",\n                                  \"Founder / Co-Founder\",\n                                  \"Group Head\",\n                                  \"General Manager\",\n                                  \"Team Lead\",\n                                  \"Others\",\n                                ]}\n                              />\n                            </Form.Group>\n                          </div>\n                          {values.designation == \"Others\" && (\n                            <div className=\"col-lg-12 mt-2\">\n                              <Form.Group className=\"mb-3\">\n                                <Input name=\"othersDesignation\" label=\"Designation / Position\" placeholder=\"Kindly specify designation\" />\n                              </Form.Group>\n                            </div>\n                          )}\n                          <div className=\"col-lg-12 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Select\n                                name=\"academicQualification\"\n                                label=\"Academidc Qualification\"\n                                firstItem=\"Select Option\"\n                                options={[\"Secondary School Certificate\", \"National Diploma\", \"BSC\", \"HND\", \"Masters\", \"MBA\", \"PHD\"]}\n                              />\n                            </Form.Group>\n                          </div>\n                        </>\n                      )}\n\n                      {step == 2 && (\n                        <>\n                          <div className=\"col-12 mt-2\">\n                            <Form.Group className=\"mb-3 mt-4\" controlId=\"formBasicEmail\">\n                              <Form.Label>\n                                Write an essay on Why you are registering for a business carrer now. What results you desire it will help\n                                you achieve. What problems or challenges you hope it will help you solve or address.\n                              </Form.Label>\n                              <Input\n                                name=\"essay\"\n                                as=\"textarea\"\n                                disableLabel={true}\n                                label=\"\"\n                                placeholder=\"Start essay\"\n                                style={{ height: \"150px\" }}\n                                errors={errors}\n                              />\n                            </Form.Group>\n                          </div>\n\n                          <div className=\"col-lg-12 mt-2\">\n                            <Form.Group className=\"mb-3\">\n                              <Select\n                                name=\"livelihood\"\n                                label=\"Means of Livelihood\"\n                                firstItem=\"Select Option\"\n                                options={[\"Business Owner\", \"Paid Employment (9-5)\"]}\n                              />\n                            </Form.Group>\n                          </div>\n                        </>\n                      )}\n\n                      {/* // steps 3 */}\n\n                      {step == 3 && (\n                        <>\n                          {values.livelihood == \"Business Owner\" && (\n                            <>\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"cacRegistered\"\n                                    label=\"Is your business registered with Corporate Affairs Commission (CAC)\"\n                                    firstItem=\"Select Option\"\n                                    options={[\"Yes\", \"No\"]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Input name=\"businessLocation\" label=\"Where is your business located ?\" placeholder=\"\" />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Input name=\"location\" label=\"Where do you reside ?\" placeholder=\"\" />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"annualTurnover\"\n                                    label=\"Annual Turnover\"\n                                    firstItem=\"Select Option\"\n                                    options={[\n                                      \"NGN 5M - NGN 10M\",\n                                      \"NGN 10M - NGN 50M\",\n                                      \"NGN 50M - NGN 250M\",\n                                      \"NGN 250M - NGN 500M\",\n                                      \"NGN 500M - NGN 1 Billion\",\n                                      \"NGN 1 Billion and above\",\n                                    ]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"ownershipStructure\"\n                                    label=\"Ownership Structure of the Business\"\n                                    firstItem=\"Select Option\"\n                                    options={[\n                                      \"Sole Proprietorship\",\n                                      \"Partnership or Joint Venture\",\n                                      \"Private Limited Liability\",\n                                      \"Public Limited Liability\",\n                                      \"Co-operative\",\n                                      \"Non-Profit Organization\",\n                                      \"Other\",\n                                    ]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"financialRecordingProcess\"\n                                    label=\"Financial Recording Processs-in-place\"\n                                    firstItem=\"Select Option\"\n                                    options={[\"Basic Bookkeeping\", \"Formal Financial Recording\", \"Auditing of Financial Records Annually\"]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"yearsOperation\"\n                                    label=\"Number of years in operation\"\n                                    firstItem=\"Select Option\"\n                                    options={[\n                                      \"20+ years\",\n                                      \"16 - 20 years\",\n                                      \"11 - 15 years\",\n                                      \"6 - 10 years\",\n                                      \"2 - 5 years\",\n                                      \"less than 2 years\",\n                                    ]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-6 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"staffStrength\"\n                                    label=\"Current Staff Strength\"\n                                    firstItem=\"Select Option\"\n                                    options={[\n                                      \"1 - 9 employees\",\n                                      \"10 - 50 employees\",\n                                      \"50 - 99 employees\",\n                                      \"100 - 199 employees\",\n                                      \"200 - 500 employees\",\n                                      \"Above employees\",\n                                    ]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Input name=\"businessSector\" label=\"Business Sector\" placeholder=\"\" />\n                                </Form.Group>\n                              </div>\n                            </>\n                          )}\n\n                          {values.livelihood == \"Paid Employment (9-5)\" && (\n                            <>\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"workExpereience\"\n                                    label=\"Years of Work Expereience\"\n                                    firstItem=\"Select Option\"\n                                    options={[\n                                      \"20+ years\",\n                                      \"16 - 20 years\",\n                                      \"11 - 15 years\",\n                                      \"6 - 10 years\",\n                                      \"2 - 5 years\",\n                                      \"less than 2 years\",\n                                    ]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Input name=\"industry\" label=\"Field Industry ( of Past & Present Work Experience )\" placeholder=\"\" />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"noPeopleReport\"\n                                    label=\"Number of people who report to you\"\n                                    firstItem=\"Select Option\"\n                                    options={[\"0 - 4\", \"5 - 24\", \"25 - 99\", \"100 - 499\", \"Above 500\"]}\n                                  />\n                                </Form.Group>\n                              </div>\n\n                              <div className=\"col-lg-12 mt-2\">\n                                <Form.Group className=\"mb-3\">\n                                  <Select\n                                    name=\"noProfessionalDevelopmentCourses\"\n                                    label=\"Number of professional development courses taken the past five years\"\n                                    firstItem=\"Select Option\"\n                                    options={[\"0 - 3\", \"4 - 9\", \"10 - 14\", \"Above 15\"]}\n                                  />\n                                </Form.Group>\n                              </div>\n                            </>\n                          )}\n                        </>\n                      )}\n\n                      {/* <pre>{JSON.stringify({ errors, values, isValid }, null, 2)}</pre> */}\n                    </div>\n                    {step == 3 && (\n                      <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n                        Sign Up\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"d-flex row g-0 mt-4 justify-content-between\">\n                    <div className=\"col-5 col-lg-3\">\n                      {step > 0 && (\n                        <button className=\"w-100 btn btn-lg btn-outline-primary\" type=\"button\" onClick={() => setStep(step - 1)}>\n                          Previous\n                        </button>\n                      )}\n                    </div>\n\n                    <div className=\"col-5 col-lg-3\">\n                      {step < 3 && (\n                        <button\n                          className=\"w-100 btn btn-lg btn-outline-primary\"\n                          type=\"button\"\n                          onClick={() => {\n                            step == 0\n                              ? validateStep0(errors)\n                              : step == 1\n                              ? validateStep1(errors)\n                              : step == 2\n                              ? validateStep2(errors)\n                              : step == 3\n                              ? validateStep3(errors)\n                              : null;\n                          }}\n                        >\n                          Next\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </form>\n                <div className=\"row mt-5 hidden\">\n                  <div className=\"col-12 text-center mt-4\">\n                    <p className=\"text-dark\">\n                      Already have an account ?{\" \"}\n                      <Link to=\"./login\" className=\"text-decoration-none h5\">\n                        {\" \"}\n                        Signin{\" \"}\n                      </Link>\n                    </p>\n                  </div>{\" \"}\n                  {/* end col */}\n                </div>\n              </>\n            )}\n          </Formik>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport { Artists, Albums, AlbumPhotos, Tweets, Signup, Login } from \"./pages\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nfunction App() {\n  return (\n    // <BrowserRouter basename='/path/to/subfolder/'></BrowserRouter>\n    <Router basename=\"/portal\">\n      {/* <Layout> */}\n      <ToastContainer position=\"bottom-center\" autoClose={4000} limit={1} />\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/signup\" exact component={Signup} />\n\n        {/* <Layout>\n          <Switch>\n            {/* <Route path=\"/artists\" exact component={Artists} />\n            <Route path=\"/artists/:userId/albums\" exact component={Albums} />\n            <Route path=\"/artists/:userId/albums/:albumId/photos\" exact component={AlbumPhotos} />\n            <Route path=\"/artists/:userId/tweets\" exact component={Tweets} /> \n          </Switch>\n        </Layout> */}\n\n        <Route component={Login} />\n      </Switch>\n      {/* </Layout> */}\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./custom.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}